module.exports = {
	apps: [
		{
			name: "sdm-app",
			script: "npm",
			args: "start",
			instances: 1,
			exec_mode: "fork",
			watch: ["public/photos"],
			watch_delay: 500,
			ignore_watch: [
				"node_modules",
				"logs",
				".git",
				".next",
				"*.log",
				"public/!(photos)",
			],
			watch_options: {
				followSymlinks: false,
				usePolling: true,
				interval: 500,
				binaryInterval: 1000,
				ignoreInitial: true,
			},
			env: {
				NODE_ENV: "production",
				PORT: 3001,
				HOST: "0.0.0.0",
				UV_THREADPOOL_SIZE: 16,
				NEXT_PUBLIC_DISABLE_STATIC_CACHE: "true",
				NEXT_PUBLIC_DISABLE_NOTIFICATIONS: "false",
			},
			env_development: {
				NODE_ENV: "development",
				PORT: 3001,
				HOST: "0.0.0.0",
				UV_THREADPOOL_SIZE: 8,
				NEXT_PUBLIC_DISABLE_STATIC_CACHE: "true",
				NEXT_PUBLIC_DISABLE_NOTIFICATIONS: "false",
			},
			env_production: {
				NODE_ENV: "production",
				PORT: 3001,
				HOST: "0.0.0.0",
				UV_THREADPOOL_SIZE: 16,
				NEXT_PUBLIC_DISABLE_STATIC_CACHE: "true",
				NEXT_PUBLIC_DISABLE_NOTIFICATIONS: "true",
			},
			log_file: "./logs/combined.log",
			out_file: "./logs/out.log",
			error_file: "./logs/error.log",
			log_date_format: "YYYY-MM-DD HH:mm:ss Z",
			max_memory_restart: "2G",
			min_uptime: "10s",
			max_restarts: 10,
			restart_delay: 2000,
			listen_timeout: 15000,
			kill_timeout: 10000,
			instance_var: "INSTANCE_ID",
			autorestart: true,
			cron_restart: "0 3 * * *",
			merge_logs: true,
			source_map_support: false,
			time: true,
			node_args: ["--max-old-space-size=2048", "--optimize-for-size"],
			health_check_grace_period: 3000,
			health_check_fatal_exceptions: true,
			increment_var: "PORT",
		},
		{
			name: "auto-close-tickets-cron",
			script: "./scripts/auto-close-tickets-direct.js",
			instances: 1,
			exec_mode: "fork",
			autorestart: false,
			cron_restart: "0 2 * * *", // Setiap hari jam 2 pagi
			watch: false,
			env: {
				NODE_ENV: "production",
				DRY_RUN: "false",
				LOG_LEVEL: "info",
				TZ: "Asia/Jakarta",
				AUTO_CLOSE_DAYS: "3",
				BATCH_SIZE: "50",
			},
			env_development: {
				NODE_ENV: "development",
				DRY_RUN: "true",
				LOG_LEVEL: "debug",
				TZ: "Asia/Jakarta",
				AUTO_CLOSE_DAYS: "3",
				BATCH_SIZE: "10",
			},
			env_production: {
				NODE_ENV: "production",
				DRY_RUN: "false",
				LOG_LEVEL: "info",
				TZ: "Asia/Jakarta",
				AUTO_CLOSE_DAYS: "3",
				BATCH_SIZE: "50",
			},
			log_file: "./logs/auto-close-cron.log",
			out_file: "./logs/auto-close-out.log",
			error_file: "./logs/auto-close-error.log",
			log_date_format: "YYYY-MM-DD HH:mm:ss Z",
			max_memory_restart: "256M",
			min_uptime: "5s",
			max_restarts: 3,
			restart_delay: 5000,
			kill_timeout: 30000,
			merge_logs: true,
			time: true,
		},
		{
			name: "auto-close-health-check",
			script: "./scripts/auto-close-tickets-direct.js",
			args: "health",
			instances: 1,
			exec_mode: "fork",
			autorestart: false,
			cron_restart: "*/30 * * * *", // Setiap 30 menit
			watch: false,
			env: {
				NODE_ENV: "production",
				LOG_LEVEL: "info",
				TZ: "Asia/Jakarta",
			},
			env_development: {
				NODE_ENV: "development",
				LOG_LEVEL: "debug",
				TZ: "Asia/Jakarta",
			},
			env_production: {
				NODE_ENV: "production",
				LOG_LEVEL: "info",
				TZ: "Asia/Jakarta",
			},
			log_file: "./logs/health-check.log",
			out_file: "./logs/health-check-out.log",
			error_file: "./logs/health-check-error.log",
			log_date_format: "YYYY-MM-DD HH:mm:ss Z",
			max_memory_restart: "128M",
			min_uptime: "3s",
			max_restarts: 5,
			restart_delay: 3000,
			kill_timeout: 15000,
			merge_logs: true,
			time: true,
		},
	],
	deploy: {
		production: {
			user: "node",
			host: "your-server-ip",
			ref: "origin/main",
			repo: "your-git-repo",
			path: "/var/www/sdm",
			"pre-deploy-local": "",
			"post-deploy":
				"npm install && npm run build && pm2 reload ecosystem.config.js --env production",
			"pre-setup": "",
		},
	},
};
